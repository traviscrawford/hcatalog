<?xml version="1.0"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<project xmlns:ivy="antlib:org.apache.ivy.ant">

  <!--
     To avoid Ivy leaking things across big projects, always load Ivy in the same classloader.
     Also note how we skip loading Ivy if it is already there, just to make sure all is well.
  -->
  <target name="ivy-init-antlib" depends="ivy-init-dirs,ivy-probe-antlib" unless="ivy.found">
    <echo message="${ant.project.name}"/>
    <typedef uri="antlib:org.apache.ivy.ant" onerror="fail" loaderRef="ivyLoader">
      <classpath>
        <pathelement location="${ivy.jar}"/>
      </classpath>
    </typedef>
    <fail>
      <condition >
        <not>
          <typefound uri="antlib:org.apache.ivy.ant" name="cleancache"/>
        </not>
      </condition>
         You need Apache Ivy 2.0 or later from http://ant.apache.org/
         It could not be loaded from ${ivy_repo_url}
    </fail>
  </target>

  <target name="ivy-init-dirs">
    <echo message="${ant.project.name}"/>
    <mkdir dir="${build.dir}/ivy"/>
    <mkdir dir="${build.dir}/ivy/report"/>
  </target>

  <target name="ivy-probe-antlib" >
    <echo message="${ant.project.name}"/>
    <condition property="ivy.found">
      <typefound uri="antlib:org.apache.ivy.ant" name="cleancache"/>
    </condition>
  </target>

  <target name="_ivy-init" depends="ivy-init-antlib" unless="_ivy-init.complete">
    <echo message="${ant.project.name}"/>
    <ivy:configure file="${ivysettings.xml}"/>
    <ivy:makepom ivyfile="${ivy.xml}" pomfile="${pom.file}">
      <mapping conf="compile" scope="compile"/>
    </ivy:makepom>
    <property name="_ivy-init.complete" value="true"/>
  </target>

  <!-- Two level thing so it can be overridden. -->
  <target name="ivy-init" depends="_ivy-init"/>

  <target name="ivy-retrieve" depends="ivy-init" description="Retrieve Ivy dependencies"
      unless="ivy-retrieve.complete">
    <echo message="${ant.project.name}"/>
    <ivy:retrieve sync="true"
      pattern="${build.dir}/ivy/lib/[conf]/[organization]-[artifact]-[revision](-[classifier]).[ext]"/>
    <ivy:cachepath pathid="ivy.compile.classpath" conf="compile"/>
    <ivy:cachepath pathid="ivy.test.classpath" conf="test"/>
    <property name="ivy-retrieve.complete" value="true"/>
  </target>

  <target name="_ivy-report" depends="ivy-retrieve" description="Generate Ivy dependency report">
    <echo message="${ant.project.name}"/>
    <ivy:report todir="${build.dir}/ivy/report" graph="false"/>
  </target>

</project>
